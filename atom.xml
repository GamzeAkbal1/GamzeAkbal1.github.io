<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://gamzeakbal1.github.io/atom.xml" rel="self"/>
  <link href="http://gamzeakbal1.github.io/"/>
  <updated>2016-08-01T05:47:54+03:00</updated>
  <id>http://gamzeakbal1.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Second Post]]></title>
    <link href="http://gamzeakbal1.github.io/blog/2016/07/31/second-post/"/>
    <updated>2016-07-31T21:48:10+03:00</updated>
    <id>http://gamzeakbal1.github.io/blog/2016/07/31/second-post</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WORKSHOP'S NOTES]]></title>
    <link href="http://gamzeakbal1.github.io/blog/2016/07/31/octopress-blogging/"/>
    <updated>2016-07-31T21:36:39+03:00</updated>
    <id>http://gamzeakbal1.github.io/blog/2016/07/31/octopress-blogging</id>
    <content type="html"><![CDATA[<h3>WHAT IS RUBY ON RAILS?</h3>

<p><em>Ruby on Rails (RoR) or Rails is an open source web application development framework written Ruby language which is based on Model-View-Controller(MVC),Dont Repeat Yourself(DRY) and Convention over Configuration  (CoC) approch.</em></p>

<h3>Well What are these ?</h3>

<p><strong>Lets start with MVC!</strong></p>

<p><em>MVC is an architectural pattern which is used software engineering.</em></p>

<p><strong>MODEL</strong></p>

<ul>
<li>Represent the data used in practice and is part of the processing logic of the stored data.</li>
<li>To save the data in the database or get the records in the database</li>
</ul>


<p><strong>VIEW</strong></p>

<ul>
<li>This part that users see</li>
</ul>


<p><strong>CONTROLLER</strong></p>

<ul>
<li>Performs bring in taking action between Model and View</li>
<li>Controller sends data to the Model received from the View or sends data to the View received from the Model.</li>
<li>Basically Controller is a bridge between Model and View</li>
</ul>


<p><img src="http://kodbas.com/wp-content/uploads/2014/04/Beh3a.png" title="mvc diagram" alt="mvc" /></p>

<p><strong>DRY</strong></p>

<p><em>According to DRY principle programmer should avoid writing again same code blog during the coding</em></p>

<ul>
<li>WITHOUT DRY;</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="k">if</span> <span class="o">(</span> repo.data<span class="o">(</span> <span class="s2">&quot;currently&quot;</span> <span class="o">)</span> !<span class="o">==</span> <span class="s2">&quot;showing&quot;</span> <span class="o">)</span> <span class="o">{</span> repo.stop<span class="o">()</span><span class="p">;</span> <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">(</span> repo1.data<span class="o">(</span> <span class="s2">&quot;currently&quot;</span> <span class="o">)</span> !<span class="o">==</span> <span class="s2">&quot;showing&quot;</span> <span class="o">)</span> <span class="o">{</span> repo1.stop<span class="o">()</span><span class="p">;</span> <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">(</span> repo2.data<span class="o">(</span> <span class="s2">&quot;currently&quot;</span> <span class="o">)</span> !<span class="o">==</span> <span class="s2">&quot;showing&quot;</span> <span class="o">)</span> <span class="o">{</span> repo2.stop<span class="o">()</span><span class="p">;</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>WITH DRY;</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>var <span class="nv">repos</span> <span class="o">=</span> <span class="o">[</span> repo, repo1, repo2 <span class="o">]</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$.</span>each<span class="o">(</span> repos, <span class="k">function</span><span class="o">(</span> i, rep <span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span> <span class="k">if</span> <span class="o">(</span> rep.data<span class="o">(</span> <span class="s2">&quot;currently&quot;</span> <span class="o">)</span> !<span class="o">==</span> <span class="s2">&quot;showing&quot;</span> <span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span> rep.stop<span class="o">()</span><span class="p">;</span> <span class="o">}</span> <span class="o">})</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
